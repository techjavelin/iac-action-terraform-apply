---
name: 'techjavelin/iac-github-actions // template'
description: 'Describe what this action does'

branding:
  icon: edit
  color: green

inputs:
  terraform-dir:
    description: "Absolute path or relative path from project root to where your terraform files are"
    required: false
    default: '.'
  artifact-name:
    description: "Customize the name of the artifact" 
    required: false
    default: 'plan-${{ github.sha }}-${{ github.run_id }}-${{ github.run_number }}'
  backend_cloud_credential_hostname:
    description: "The hostname of the cloud backend provider"
    required: false
    default: "app.terraform.io"
  backend_cloud_credential_token:
    description: "If you're using terraform cloud as a backend, provide your credential here"
    required: false
  workspace_name:
    description: "If you're using workspaces, provide the workspace name here"
    required: false

outputs:
  msg:
    description: "The message"
    value: ${{ steps.message.outputs.message }}

runs:
  using: composite
  steps:
    - name: terraform-apply // checkout 
      uses: actions/checkout@v3

    - name: terraform-apply // setup-terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_hostname: ${{ inputs.backend_cloud_credential_hostname }}
        cli_config_credentials_token: ${{ inputs.backend_cloud_credential_token }}

    - name: terraform-apply // terraform-init
      id: init
      run: terraform -chdir=${{ inputs.terraform-dir }} init
      shell: bash

    - name: terraform-apply // download-plan
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.terraform-dir }}

    - name: terraform-apply // execute
      id: apply
      run: terraform -chdir=${{ inputs.terraform-dir }} apply --auto-approve plan.tfplan
      shell: bash
